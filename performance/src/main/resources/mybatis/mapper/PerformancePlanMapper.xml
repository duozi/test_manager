<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.xn.performance.dao.PerformancePlanMapper">

    <resultMap id="PerformancePlanMap" type="com.xn.performance.entity.PerformancePlan">
        <result property="id" column="id"/>
        <result property="planName" column="plan_name"/>
        <result property="remark" column="remark"/>
        <result property="company" column="company"/>
        <result property="department" column="department"/>
        <result property="psystem" column="psystem"/>
        <result property="scriptId" column="script_id"/>
        <result property="scriptName" column="script_name"/>
        <result property="scenarioId" column="scenario_id"/>
        <result property="scenarioName" column="scenario_name"/>
        <result property="planStatus" column="plan_status"/>
        <result property="createPerson" column="create_person"/>
    </resultMap>
    
    <sql id="columns">
        <![CDATA[
        id, plan_name, remark, company, department, psystem, script_id, scenario_id, plan_status, create_person
        ]]>
    </sql>
    
    <sql id="where">
        <where>
           <if test="@Ognl@isNotEmpty(id)">
                AND id = #{id}
            </if>
           <if test="@Ognl@isNotEmpty(planName)">
                AND plan_name = #{planName}
            </if>
           <if test="@Ognl@isNotEmpty(remark)">
                AND remark = #{remark}
            </if>
           <if test="@Ognl@isNotEmpty(company)">
                AND company = #{company}
            </if>
           <if test="@Ognl@isNotEmpty(department)">
                AND department = #{department}
            </if>
           <if test="@Ognl@isNotEmpty(psystem)">
                AND psystem = #{psystem}
            </if>
           <if test="@Ognl@isNotEmpty(scriptId)">
                AND script_id = #{scriptId}
            </if>
           <if test="@Ognl@isNotEmpty(scenarioId)">
                AND scenario_id = #{scenarioId}
            </if>
           <if test="@Ognl@isNotEmpty(planStatus)">
                AND plan_status = #{planStatus}
            </if>
           <if test="@Ognl@isNotEmpty(createPerson)">
                AND create_person = #{createPerson}
            </if>
        </where>
    </sql>
    
    <select id="get" resultMap="PerformancePlanMap">
        SELECT <include refid="columns" />
        <![CDATA[
            FROM
                performance_plan
            WHERE 
                id = #{id} 
        ]]>
    </select>
    
    <select id="list" resultMap="PerformancePlanMap">
        SELECT
            <include refid="columns" />
        FROM
            performance_plan 
        <include refid="where"/>
    </select>
        
    <select id="count" resultType="long">
        <![CDATA[
            SELECT
                count(1)
            FROM
                performance_plan
        ]]>
        <include refid="where"/>
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO performance_plan (
                id,
                plan_name,
                remark,
                company,
                department,
                psystem,
                script_id,
                scenario_id,
                plan_status,
                create_person
            ) VALUES (
                #{id},
                #{planName},
                #{remark},
                #{company},
                #{department},
                #{psystem},
                #{scriptId},
                #{scenarioId},
                #{planStatus},
                #{createPerson}
            )
        ]]>
    </insert>

    <insert id="saveBatch">
        <![CDATA[
            INSERT INTO performance_plan (
                id,
                plan_name,
                remark,
                company,
                department,
                psystem,
                script_id,
                scenario_id,
                plan_status,
                create_person
            ) VALUES
        ]]>
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id},#{item.planName},#{item.remark},#{item.company},#{item.department},#{item.psystem},#{item.scriptId},#{item.scenarioId},#{item.planStatus},#{item.createPerson})
        </foreach>
    </insert>
    
    <update id="update">
        	UPDATE
                performance_plan
            <set>
                <if test="planName != null">
                	<![CDATA[ plan_name = #{planName} ]]>,
                </if>
                <if test="remark != null">
                	<![CDATA[ remark = #{remark} ]]>,
                </if>
                <if test="company != null">
                	<![CDATA[ company = #{company} ]]>,
                </if>
                <if test="department != null">
                	<![CDATA[ department = #{department} ]]>,
                </if>
                <if test="psystem != null">
                	<![CDATA[ psystem = #{psystem} ]]>,
                </if>
                <if test="scriptId != null">
                	<![CDATA[ script_id = #{scriptId} ]]>,
                </if>
                <if test="scenarioId != null">
                	<![CDATA[ scenario_id = #{scenarioId} ]]>,
                </if>
                <if test="planStatus != null">
                	<![CDATA[ plan_status = #{planStatus} ]]>,
                </if>
                <if test="createPerson != null">
                	<![CDATA[ create_person = #{createPerson} ]]>
                </if>
            </set>
            WHERE
                id = #{id} 
    </update>
    
    <delete id="deleteByPK">
        <![CDATA[
            DELETE
            FROM
                performance_plan
            WHERE
                id = #{id} 
        ]]>
    </delete>
    
    <delete id="delete">
        <![CDATA[
            DELETE
            FROM
                performance_plan
        ]]>
        <include refid="where"/>
    </delete>
    
    <delete id="deleteBatchByPK">
        <![CDATA[
            DELETE
            FROM
                performance_plan
            WHERE
                id IN
        ]]>
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{ids}</foreach>
    </delete>
</mapper>

