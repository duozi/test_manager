<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.xn.autotest.bean.properties.redisProperties.dao.RedisAssertMapper">

    <resultMap id="RedisAssertMap" type="com.xn.autotest.bean.properties.redisProperties.entity.RedisAssert">
        <result property="id" column="id"/>
        <result property="caseId" column="case_id"/>
        <result property="redisAssertStatus" column="redis_assert_status"/>
        <result property="redisName" column="redis_name"/>
        <result property="redisKey" column="redis_key"/>
        <result property="redisAssertContent" column="redis_assert_content"/>
        <result property="changeTime" column="change_time"/>
    </resultMap>
    
    <sql id="columns">
        <![CDATA[
        id, case_id, redis_assert_status, redis_name, redis_key, redis_assert_content, change_time
        ]]>
    </sql>
    
    <sql id="where">
        <where>
           <if test="id != null and id != 0">
                AND id = #{id}
            </if>
           <if test="@isNotEmpty(caseId)">
                AND case_id = #{caseId}
            </if>
           <if test="@isNotEmpty(redisAssertStatus)">
                AND redis_assert_status = #{redisAssertStatus}
            </if>
           <if test="@isNotEmpty(redisName)">
                AND redis_name = #{redisName}
            </if>
           <if test="@isNotEmpty(redisKey)">
                AND redis_key = #{redisKey}
            </if>
           <if test="@isNotEmpty(redisAssertContent)">
                AND redis_assert_content = #{redisAssertContent}
            </if>
           <if test="@isNotEmpty(changeTimeBegin)">
                AND change_time >= #{changeTimeBegin}
           </if>
           <if test="@isNotEmpty(changeTimeEnd)">
                AND change_time &lt;= #{changeTimeEnd}
           </if>
        </where>
    </sql>
    
    <select id="get" resultMap="RedisAssertMap">
        SELECT <include refid="columns" />
        <![CDATA[
            FROM
                redis_assert
            WHERE 
                id = #{id} 
        ]]>
    </select>
    
    <select id="list" resultMap="RedisAssertMap">
        SELECT
            <include refid="columns" />
        FROM
            redis_assert 
        <include refid="where"/>
    </select>
        
    <select id="count" resultType="long">
        <![CDATA[
            SELECT
                count(1)
            FROM
                redis_assert
        ]]>
        <include refid="where"/>
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO redis_assert (
                id,
                case_id,
                redis_assert_status,
                redis_name,
                redis_key,
                redis_assert_content,
                change_time
            ) VALUES (
                #{id},
                #{caseId},
                #{redisAssertStatus},
                #{redisName},
                #{redisKey},
                #{redisAssertContent},
                #{changeTime}
            )
        ]]>
    </insert>

    <insert id="saveBatch">
        <![CDATA[
            INSERT INTO redis_assert (
                id,
                case_id,
                redis_assert_status,
                redis_name,
                redis_key,
                redis_assert_content,
                change_time
            ) VALUES
        ]]>
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id},#{item.caseId},#{item.redisAssertStatus},#{item.redisName},#{item.redisKey},#{item.redisAssertContent},#{item.changeTime})
        </foreach>
    </insert>
    
    <update id="update">
        	UPDATE
                redis_assert
            <set>
                <if test="caseId != null">
                	<![CDATA[ case_id = #{caseId} ]]>,
                </if>
                <if test="redisAssertStatus != null">
                	<![CDATA[ redis_assert_status = #{redisAssertStatus} ]]>,
                </if>
                <if test="redisName != null">
                	<![CDATA[ redis_name = #{redisName} ]]>,
                </if>
                <if test="redisKey != null">
                	<![CDATA[ redis_key = #{redisKey} ]]>,
                </if>
                <if test="redisAssertContent != null">
                	<![CDATA[ redis_assert_content = #{redisAssertContent} ]]>,
                </if>
                <if test="changeTime != null">
                	<![CDATA[ change_time = #{changeTime} ]]>
                </if>
            </set>
            WHERE
                id = #{id} 
    </update>
    
    <delete id="deleteByPK">
        <![CDATA[
            DELETE
            FROM
                redis_assert
            WHERE
                id = #{id} 
        ]]>
    </delete>
    
    <delete id="delete">
        <![CDATA[
            DELETE
            FROM
                redis_assert
        ]]>
        <include refid="where"/>
    </delete>
    
    <delete id="deleteBatchByPK">
        <![CDATA[
            DELETE
            FROM
                redis_assert
            WHERE
                id IN
        ]]>
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{ids}</foreach>
    </delete>
</mapper>

