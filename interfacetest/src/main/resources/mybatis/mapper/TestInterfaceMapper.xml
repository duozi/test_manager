<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xn.interfacetest.dao.TestInterfaceMapper">

    <resultMap id="TestInterfaceMap" type="com.xn.interfacetest.entity.TestInterface">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="serviceId" column="service_id"/>
        <result property="type" column="type"/>
        <result property="url" column="url"/>
        <result property="jarPath" column="jar_path"/>
        <result property="className" column="class_name"/>
        <result property="methodName" column="method_name"/>
        <result property="paramsTypes" column="params_types"/>
        <result property="paramsValues" column="params_values"/>
        <result property="requestType" column="request_type"/>
        <result property="protocolType" column="protocol_type"/>
        <result property="params" column="params"/>
        <result property="dubboVersion" column="dubbo_version"/>
        <result property="dubboGroup" column="dubbo_group"/>
        <result property="dubboTimeout" column="dubbo_timeout"/>
        <result property="zkOrNot" column="zk_or_not"/>
        <result property="isDelete" column="is_delete"/>
        <result property="contentType" column="content_type"/>
        <result property="status" column="status"/>
    </resultMap>
    
    <sql id="columns">
        <![CDATA[
        id, name, description, service_id,status, type, url, jar_path,class_name, method_name,params_types,params_values,
        request_type, protocol_type, params, dubbo_version, dubbo_group, dubbo_timeout,zk_or_not,content_type
        ]]>
    </sql>
    
    <sql id="where">
        <where>
           <if test="id != null and id != 0">
                AND id = #{id}
            </if>
           <if test="@Ognl@isNotEmpty(name)">
                AND name = #{name}
            </if>
           <if test="@Ognl@isNotEmpty(description)">
                AND description = #{description}
            </if>
           <if test="@Ognl@isNotEmpty(serviceId)">
                AND service_id = #{serviceId}
            </if>
           <if test="@Ognl@isNotEmpty(type)">
                AND type = #{type}
            </if>
           <if test="@Ognl@isNotEmpty(url)">
                AND url = #{url}
            </if>
           <if test="@Ognl@isNotEmpty(jarPath)">
                AND jar_path = #{jarPath}
            </if>
            <if test="@Ognl@isNotEmpty(className)">
                AND class_name = #{className}
            </if>
            <if test="@Ognl@isNotEmpty(methodName)">
                AND method_name = #{methodName}
            </if>
            <if test="@Ognl@isNotEmpty(paramsTypes)">
                AND params_types = #{paramsTypes}
            </if>
            <if test="@Ognl@isNotEmpty(paramsValues)">
                AND params_values = #{paramsValues}
            </if>
           <if test="@Ognl@isNotEmpty(requestType)">
                AND request_type = #{requestType}
            </if>
           <if test="@Ognl@isNotEmpty(protocolType)">
                AND protocol_type = #{protocolType}
            </if>
           <if test="@Ognl@isNotEmpty(params)">
                AND params = #{params}
            </if>
           <if test="@Ognl@isNotEmpty(dubboVersion)">
                AND dubbo_version = #{dubboVersion}
            </if>
           <if test="@Ognl@isNotEmpty(dubboGroup)">
                AND dubbo_group = #{dubboGroup}
            </if>
           <if test="@Ognl@isNotEmpty(dubboTimeout)">
                AND dubbo_timeout = #{dubboTimeout}
            </if>
            <if test="@Ognl@isNotEmpty(zkOrNot)">
                AND zk_or_not = #{zkOrNot}
            </if>
            <if test="@Ognl@isNotEmpty(contentType)">
                AND content_type = #{contentType}
            </if>
        </where>
    </sql>

    <select id="getParamsByInterfaceId" resultType="String">
        SELECT params
            FROM
                test_interface
            WHERE
                id = #{id}
    </select>

    <select id="get" resultMap="TestInterfaceMap">
        SELECT <include refid="columns" />
        <![CDATA[
            FROM
                test_interface
            WHERE 
                id = #{id} 
        ]]>
    </select>

    <select id="getByCaseId" resultMap="TestInterfaceMap">
        SELECT ti.*
            FROM
                test_interface ti,test_case tc
            WHERE ti.id = tc.interface_id
                and tc.id = #{caseId}
    </select>

    <select id="listAllBySuitId" resultMap="TestInterfaceMap">
       SELECT ti.*
        from test_interface ti
        LEFT JOIN relation_suit_case rsc on rsc.interface_id = ti.id
        WHERE rsc.suit_id = #{suitId}
    </select>

    <select id="listAllBySuitList" resultMap="TestInterfaceMap">
        SELECT DISTINCT ti.*
        from test_interface ti
        LEFT JOIN relation_suit_case rsc on rsc.interface_id = ti.id
        WHERE rsc.suit_id in
        <foreach collection="testSuitDtoList" index="index" item="item" open="(" separator="," close=")">#{item.id}</foreach>
    </select>

    <select id="list" resultMap="TestInterfaceMap">
        SELECT
            <include refid="columns" />
        FROM
            test_interface
        <where>
            is_delete = 0
            <if test="id != null and id != 0">
                AND id = #{id}
            </if>
            <if test="@Ognl@isNotEmpty(name)">
                AND name = #{name}
            </if>
            <if test="@Ognl@isNotEmpty(description)">
                AND description = #{description}
            </if>
            <if test="@Ognl@isNotEmpty(serviceId)">
                AND service_id = #{serviceId}
            </if>
            <if test="@Ognl@isNotEmpty(type)">
                AND type = #{type}
            </if>
            <if test="@Ognl@isNotEmpty(url)">
                AND url = #{url}
            </if>
            <if test="@Ognl@isNotEmpty(jarPath)">
                AND jar_path = #{jarPath}
            </if>
            <if test="@Ognl@isNotEmpty(className)">
                AND class_name = #{className}
            </if>
            <if test="@Ognl@isNotEmpty(methodName)">
                AND method_name = #{methodName}
            </if>
            <if test="@Ognl@isNotEmpty(paramsTypes)">
                AND params_types = #{paramsTypes}
            </if>
            <if test="@Ognl@isNotEmpty(paramsValues)">
                AND params_values = #{paramsValues}
            </if>
            <if test="@Ognl@isNotEmpty(requestType)">
                AND request_type = #{requestType}
            </if>
            <if test="@Ognl@isNotEmpty(protocolType)">
                AND protocol_type = #{protocolType}
            </if>
            <if test="@Ognl@isNotEmpty(params)">
                AND params = #{params}
            </if>
            <if test="@Ognl@isNotEmpty(dubboVersion)">
                AND dubbo_version = #{dubboVersion}
            </if>
            <if test="@Ognl@isNotEmpty(dubboGroup)">
                AND dubbo_group = #{dubboGroup}
            </if>
            <if test="@Ognl@isNotEmpty(dubboTimeout)">
                AND dubbo_timeout = #{dubboTimeout}
            </if>
            <if test="@Ognl@isNotEmpty(zkOrNot)">
                AND zk_or_not = #{zkOrNot}
            </if>
            <if test="@Ognl@isNotEmpty(contentType)">
                AND content_type = #{contentType}
            </if>
        </where>
    </select>

    <select id="count" resultType="long">
        <![CDATA[
            SELECT
                count(1)
            FROM
                test_interface
        ]]>
        <include refid="where"/>
    </select>

    <update id="changeStatus">
        UPDATE
        test_interface
        SET status = #{status}
        WHERE
        id = #{id}
    </update>

    <update id="changeStatusList">
        UPDATE
        test_interface
        SET status = #{status}
        WHERE
        id IN
        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">#{item.id}</foreach>
    </update>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO test_interface (
                id,
                name,
                description,
                service_id,
                type,
                url,
                jar_path,
                class_name,
                method_name,
                params_types,
                params_values,
                request_type,
                protocol_type,
                params,
                dubbo_version,
                dubbo_group,
                dubbo_timeout,
                zk_or_not,
                content_type
            ) VALUES (
                #{id},
                #{name},
                #{description},
                #{serviceId},
                #{type},
                #{url},
                #{jarPath},
                #{className},
                #{methodName},
                #{paramsTypes},
                #{paramsValues},
                #{requestType},
                #{protocolType},
                #{params},
                #{dubboVersion},
                #{dubboGroup},
                #{dubboTimeout},
                #{zkOrNot},
                #{contentType}
            )
        ]]>
    </insert>

    <insert id="saveBatch">
        <![CDATA[
            INSERT INTO test_interface (
                id,
                name,
                description,
                service_id,
                type,
                url,
                jar_path,
                class_name,
                method_name,
                params_types,
                params_values,
                request_type,
                protocol_type,
                params,
                dubbo_version,
                dubbo_group,
                dubbo_timeout,
                zk_or_not,
                content_type
            ) VALUES
        ]]>
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id},#{item.name},#{item.description},#{item.serviceId},#{item.type},#{item.url},#{item.jarPath},
            #{item.className},#{item.methodName}, #{item.paramsTypes}, #{item.paramsValues}, #{item.requestType},
            #{item.protocolType},#{item.params},#{item.dubboVersion},#{item.dubboGroup},#{item.dubboTimeout},#{item.zkOrNot},#{item.contentType})
        </foreach>
    </insert>
    
    <update id="update">
        	UPDATE
                test_interface
            <set>
                <if test="name != null">
                	<![CDATA[ name = #{name} ]]>,
                </if>
                <if test="description != null">
                	<![CDATA[ description = #{description} ]]>,
                </if>
                <if test="serviceId != null">
                	<![CDATA[ service_id = #{serviceId} ]]>,
                </if>
                <if test="type != null">
                	<![CDATA[ type = #{type} ]]>,
                </if>
                <if test="url != null">
                	<![CDATA[ url = #{url} ]]>,
                </if>
                <if test="jarPath != null">
                	<![CDATA[ jar_path = #{jarPath} ]]>,
                </if>
                <if test="className != null">
                    <![CDATA[ class_name = #{className} ]]>,
                </if>
                <if test="methodName != null">
                    <![CDATA[ method_name = #{methodName} ]]>,
                </if>
                <if test="paramsTypes != null">
                    <![CDATA[ params_types = #{paramsTypes} ]]>,
                </if>
                <if test="paramsValues != null">
                    <![CDATA[ params_values = #{paramsValues} ]]>,
                </if>
                <if test="requestType != null">
                	<![CDATA[ request_type = #{requestType} ]]>,
                </if>
                <if test="protocolType != null">
                	<![CDATA[ protocol_type = #{protocolType} ]]>,
                </if>
                <if test="params != null">
                	<![CDATA[ params = #{params} ]]>,
                </if>
                <if test="dubboVersion != null">
                	<![CDATA[ dubbo_version = #{dubboVersion} ]]>,
                </if>
                <if test="dubboGroup != null">
                	<![CDATA[ dubbo_group = #{dubboGroup} ]]>,
                </if>
                <if test="dubboTimeout != null">
                	<![CDATA[ dubbo_timeout = #{dubboTimeout} ]]>,
                </if>
                <if test="zkOrNot != null">
                    <![CDATA[ zk_or_not = #{zkOrNot} ]]>,
                </if>
                <if test="contentType != null">
                    <![CDATA[ content_type = #{contentType} ]]>
                </if>
            </set>
            WHERE
                id = #{id} 
    </update>
    
    <update id="deleteByPK">
        <![CDATA[
            UPDATE
            test_interface
            SET is_delete = 1
            WHERE
                id = #{id} 
        ]]>
    </update>
    
    <delete id="delete">
        <![CDATA[
            DELETE
            FROM
                test_interface
        ]]>
        <include refid="where"/>
    </delete>
    
    <delete id="deleteBatchByPK">
        <![CDATA[
            DELETE
            FROM
                test_interface
            WHERE
                id IN
        ]]>
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{ids}</foreach>
    </delete>

    <select id="listWithInfoByIds" resultMap="TestInterfaceMap">
        <![CDATA[
        select *
        from test_interface
        WHERE
        id IN
        ]]>
        <foreach collection="array " index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
    </select>
</mapper>

